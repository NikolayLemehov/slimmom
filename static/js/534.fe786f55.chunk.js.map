{"version":3,"file":"static/js/534.fe786f55.chunk.js","mappings":"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","sources":["components/DiaryAddProductForm/DiaryFormValidation/DiaryFormValidation.jsx","components/InputField/InputField.styled.jsx","components/InputField/InputField.jsx","pages/LogInPage/LogIn.styled.jsx","pages/LogInPage/LogInPage.jsx","utils/noop.js"],"sourcesContent":["import { FormErrorMessage } from '@chakra-ui/react';\n\nimport React from 'react';\n\nexport default function DiaryFormValidation({ text }) {\n  return (\n    <FormErrorMessage\n      fontSize=\"8px\"\n      m=\"0\"\n      position=\"absolute\"\n      top={{ xs: '50px', md: '70px' }}\n    >\n      {text}\n    </FormErrorMessage>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FormLabel = styled.label`\n  display: block;\n  position: relative;\n  height: 46px;\n\n  &:focus-within span {\n    bottom: 25px;\n\n    font-size: 12px;\n    color: #fc842d;\n\n    @media screen and (min-width: 768px) {\n      bottom: 32px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    height: 60px;\n  }\n`;\n\nexport const LabelName = styled.span`\n  position: absolute;\n  bottom: 8px;\n\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n\n  transition: bottom 300ms ease, color 300ms ease, font-size 300ms ease;\n  z-index: 10;\n  @media screen and (min-width: 768px) {\n    bottom: 20px;\n  }\n`;\n\nexport const Input = styled.input`\n  position: absolute;\n  bottom: 0;\n\n  width: 100%;\n  /* padding-bottom: 0px; */\n\n  letter-spacing: 0.04em;\n\n  border-bottom: 1px solid #e0e0e0;\n\n  transition: border-color 300ms ease;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 5px;\n  }\n\n  &:focus-within {\n    border-bottom: 1px solid #fc842d;\n    outline: none;\n  }\n\n  &:not(:placeholder-shown) {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &:not(:placeholder-shown) ~ span {\n    bottom: 25px;\n    color: #fc842d;\n\n    font-size: 12px;\n    @media screen and (min-width: 768px) {\n      bottom: 32px;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FormLabel, LabelName, Input } from './InputField.styled';\n\nexport default function InputField({\n  labelName,\n  handlerEvent,\n  width,\n  right,\n  ...inputSetting\n}) {\n  return (\n    <>\n      <FormLabel style={(width = { width })}>\n        <Input onChange={handlerEvent} {...inputSetting} placeholder=\" \" />\n        <LabelName style={{ right: right }}>{labelName}</LabelName>\n      </FormLabel>\n    </>\n  );\n}\n\nInputField.propTypes = {\n  labelName: PropTypes.string,\n  handlerEvent: PropTypes.func.isRequired,\n  width: PropTypes.string,\n  right: PropTypes.number,\n};\n","import styled from '@emotion/styled';\nimport desktopMainBg from '../../assets/bg/desktopMainBg.png';\nimport tabletMainBg from '../../assets/bg/tabletMainBg.png';\n\nexport const BgImg = styled.div`\n  @media screen and (min-width: 768px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n    z-index: -1;\n\n    width: 100vw;\n    height: 100vh;\n\n    background-image: url(${tabletMainBg});\n    background-repeat: no-repeat;\n    background-position: right bottom;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopMainBg});\n  }\n`;\n","import {Field, Form, Formik} from \"formik\";\nimport {\n  Box,\n  Button,\n  Flex, FormControl,\n  Heading,\n  VStack\n} from \"@chakra-ui/react\";\nimport InputField from \"../../components/InputField/InputField\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport {customColors} from \"../../theme/colors\";\nimport {BgImg} from \"./LogIn.styled\";\nimport * as Yup from 'yup';\nimport {noop} from \"../../utils/noop\";\nimport {authSelectors} from \"../../redux/auth/authSelectors\";\nimport DiaryFormValidation from \"../../components/DiaryAddProductForm/DiaryFormValidation/DiaryFormValidation\";\n\nconst LogInSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('This field is required'),\n  password: Yup.string()\n    .min(5, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required'),\n});\n\nexport default function LogInPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const loginLoading = useSelector(authSelectors.loginLoading);\n  const onSubmit = (values) => {\n    dispatch(authOperations.logIn(values))\n  }\n\n  return (\n    <>\n      <BgImg/>\n      <Flex\n        w={{xs: '100%', md: 'auto'}}\n        justify=\"flex-start\"\n        alignItems={{xs: 'flex-start', lg: 'center'}}\n        flexGrow='1'\n        pt={{xs: '38px', md: '150px'}}\n        pb={{xs: '50px', lg: '25px'}}\n      >\n        <Box\n          flexGrow='1'\n        >\n          <Heading\n            as='h1' size='xs'\n            mb={{xs: '50px', md: '34px'}}\n            w={{xs: '100%', md: 'auto'}}\n            textAlign={{xs: 'center', md: 'left'}}\n            color={customColors.sun[\"100\"]}\n            textTransform='uppercase'\n          >Sign In</Heading>\n\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n            }}\n            validationSchema={LogInSchema}\n            onSubmit={onSubmit}\n          >\n            {() => (\n              <Form>\n                <VStack spacing={7} align=\"flex-start\" mb={{xs: '60px', lg: '60px'}}>\n                  <Field name='email'>\n                    {({field, form}) => (\n                      <Box w={{xs: '100%', md: '240px'}}>\n                        <FormControl isInvalid={form.errors.email && form.touched.email}>\n                          <InputField\n                            // autoComplete=\"off\"\n                            labelName=\"Email&nbsp;*\"\n                            type=\"text\"\n                            name=\"email\"\n                            handlerEvent={noop}\n                            required\n                            width='100%'\n                            {...field}\n                          />\n                          <DiaryFormValidation text={form.errors.email}/>\n                        </FormControl>\n                      </Box>\n                    )}\n                  </Field>\n                  <Field name='password'>\n                    {({field, form}) => (\n                      <Box w={{xs: '100%', md: '240px'}}>\n                        <FormControl isInvalid={form.errors.password && form.touched.password}>\n                          <InputField\n                            // autoComplete=\"off\"\n                            labelName=\"Password&nbsp;*\"\n                            type=\"password\"\n                            name=\"password\"\n                            handlerEvent={noop}\n                            required\n                            width='100%'\n                            {...field}\n                          />\n                          <DiaryFormValidation text={form.errors.password}/>\n                        </FormControl>\n                      </Box>\n                    )}\n                  </Field>\n                </VStack>\n                <Flex\n                  gap={6}\n                  flexDirection={{xs: 'column', md: 'row'}}\n                  alignItems={{xs: 'center'}}\n                >\n                  <Button variant={'primary'} type=\"submit\" isLoading={loginLoading}>Login</Button>\n                  <Button variant={'outline'} type=\"button\" onClick={() => navigate('/registration')}>Register</Button>\n                </Flex>\n\n              </Form>\n            )}\n          </Formik>\n\n        </Box>\n      </Flex>\n    </>\n  );\n}\n","export const noop = () => {}\n"],"names":["DiaryFormValidation","text","fontSize","m","position","top","xs","md","FormLabel","styled","LabelName","Input","InputField","labelName","handlerEvent","width","right","inputSetting","style","onChange","placeholder","BgImg","tabletMainBg","desktopMainBg","LogInSchema","Yup","shape","email","required","password","min","max","LogInPage","dispatch","useDispatch","navigate","useNavigate","loginLoading","useSelector","authSelectors","w","justify","alignItems","lg","flexGrow","pt","pb","as","size","mb","textAlign","color","customColors","textTransform","initialValues","validationSchema","onSubmit","values","authOperations","spacing","align","name","field","form","isInvalid","errors","touched","type","noop","gap","flexDirection","variant","isLoading","onClick"],"sourceRoot":""}